(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{414:function(a,t,s){"use strict";s.r(t);var r=s(4),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"手写题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手写题"}},[a._v("#")]),a._v(" 手写题")]),a._v(" "),t("h4",{attrs:{id:"写函数获取数据的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写函数获取数据的类型"}},[a._v("#")]),a._v(" 写函数获取数据的类型")]),a._v(" "),t("h4",{attrs:{id:"new-一个对象的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-一个对象的过程"}},[a._v("#")]),a._v(" new 一个对象的过程")]),a._v(" "),t("h4",{attrs:{id:"lazyman"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lazyman"}},[a._v("#")]),a._v(" LazyMan")]),a._v(" "),t("h4",{attrs:{id:"dom-树的遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-树的遍历"}},[a._v("#")]),a._v(" dom 树的遍历")]),a._v(" "),t("h4",{attrs:{id:"函数柯里化-curry-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数柯里化-curry-函数"}},[a._v("#")]),a._v(" 函数柯里化，curry 函数")]),a._v(" "),t("h4",{attrs:{id:"instanceof-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-原理"}},[a._v("#")]),a._v(" instanceof 原理")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("__proto__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("F")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("protoType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h4",{attrs:{id:"手写-bind-apply-call"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手写-bind-apply-call"}},[a._v("#")]),a._v(" 手写 bind, apply call")]),a._v(" "),t("ul",[t("li",[a._v("bind\n"),t("ul",[t("li",[a._v("返回一个新的函数")]),a._v(" "),t("li",[a._v("绑定 this 和部分参数")]),a._v(" "),t("li",[a._v("如果是箭头函数，不改变 this，只改变参数")])])]),a._v(" "),t("li")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//\n")])])]),t("h4",{attrs:{id:"events-自定义事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events-自定义事件"}},[a._v("#")]),a._v(" Events 自定义事件")]),a._v(" "),t("ul",[t("li",[a._v("事件走线")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n")])])]),t("h4",{attrs:{id:"lru-缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lru-缓存"}},[a._v("#")]),a._v(" LRU 缓存")]),a._v(" "),t("ul",[t("li",[a._v("只缓存最近使用的，删除沉水的数据")]),a._v(" "),t("li",[a._v("api: get set")]),a._v(" "),t("li",[a._v("hash 存储 对象和 map")]),a._v(" "),t("li",[a._v("必须有序 可排序")])]),a._v(" "),t("h4",{attrs:{id:"深拷贝函数-考虑-map-set-的循环引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝函数-考虑-map-set-的循环引用"}},[a._v("#")]),a._v(" 深拷贝函数，考虑 Map Set 的循环引用")])])}),[],!1,null,null,null);t.default=e.exports}}]);